name: CI
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
  AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
  AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
  DISPLAY: :99

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      ALUMNIUM_MODEL: ${{ matrix.model }}
    strategy:
      fail-fast: false
      matrix:
        model:
          - aws_anthropic
          - aws_meta
          - azure_openai
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - run: Xvfb ${{ env.DISPLAY }} &
      - run: poetry install
      - run: poetry run behave --format html-pretty --outfile reports/behave.html --format pretty
      - run: poetry run pytest --html reports/pytest.html
      - if: failure() && runner.debug == '1'
        uses: mxschmitt/action-tmate@v3
      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.model }}
          path: reports/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    environment: release
    if: github.ref_name == 'main' && startsWith(github.event.head_commit.message, 'release:')
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - run: poetry install
      - run: poetry build
      - run: echo "version=$(poetry version --short)" >> $GITHUB_OUTPUT
        id: version
      - uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/*
      - uses: pypa/gh-action-pypi-publish@release/v1
      - run: gh release create ${{ steps.version.outputs.version }} --generate-notes dist/*
        env:
          GH_TOKEN: ${{ github.token }}
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
      - if: failure() && runner.debug == '1'
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
