name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

concurrency:
  group: ci-${{ github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request_target' }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      permitted: ${{ steps.check-access.outputs.user-permission == 'true' }}
      python-changed: ${{ steps.changed-files.outputs.python_any_changed == 'true' }}
      server-changed: ${{ steps.changed-files.outputs.server_any_changed == 'true' }}
      typescript-changed: ${{ steps.changed-files.outputs.typescript_any_changed == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - id: check-access
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
      - id: changed-files
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47
        with:
          files_yaml: |
            python:
              - packages/python/**
            server:
              - Dockerfile
              - packages/python/**/server/**
            typescript:
              - packages/typescript/**
      - uses: actions/github-script@v8
        with:
          script: |
            console.log('All changed files:', ${{ toJSON(steps.changed-files.outputs.all_changed_files) }});
            console.log('Python changed files:', ${{ toJSON(steps.changed-files.outputs.python_all_changed_files) }});
            console.log('Server changed files:', ${{ toJSON(steps.changed-files.outputs.server_all_changed_files) }});
            console.log('TypeScript changed files:', ${{ toJSON(steps.changed-files.outputs.typescript_all_changed_files) }});
      - run: exit 1
      - uses: docker/setup-buildx-action@v3
      - uses: actions/setup-node@v6
        with:
          cache: npm
          cache-dependency-path: packages/typescript/package-lock.json
          node-version-file: .tool-versions
      - uses: actions/setup-python@v5
        with:
          python-version-file: .tool-versions
      - uses: actions/cache@v4
        with:
          path: packages/python/.venv
          key: venv-${{ hashFiles('packages/python/poetry.lock') }}
      - run: pip install poetry=="$(grep poetry .tool-versions | cut -d" " -f2)"
      - run: make install
      - run: make build
      - run: make check-format
      - run: make test
      - uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
      - if: failure() && runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

  python:
    name: Python
    needs: test
    secrets: inherit
    if: needs.test.outputs.permitted && needs.test.outputs.python-changed
    uses: ./.github/workflows/ci-python.yml
    with:
      sha: ${{ github.event.pull_request.head.sha || github.sha }}

  typescript:
    name: TypeScript
    needs: test
    secrets: inherit
    if: needs.test.outputs.permitted && (needs.test.outputs.server-changed || needs.test.outputs.typescript-changed)
    uses: ./.github/workflows/ci-typescript.yml
    with:
      sha: ${{ github.event.pull_request.head.sha || github.sha }}
